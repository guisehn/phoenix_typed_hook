{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import type { LiveSocket } from \"phoenix_live_view\";\n\nexport abstract class Hook {\n  /**\n   * Attribute referencing the bound DOM node.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  el: HTMLElement;\n\n  /**\n   * The reference to the underlying `LiveSocket` instance.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  liveSocket: LiveSocket;\n\n  /**\n   * Method to push an event from the client to the LiveView server.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  pushEvent: (\n    event: string,\n    payload: any,\n    callback: (reply: any, ref: number) => void\n  ) => void;\n\n  /**\n   * Method to push targeted events from the client to LiveViews and LiveComponents.\n   * It sends the event to the LiveComponent or LiveView the `selectorOrTarget` is defined\n   * in, where its value can be either a query selector or an actual DOM element. If the\n   * query selector returns more than one element it will send the event to all of them,\n   * even if all the elements are in the same LiveComponent or LiveView.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  pushEventTo: (\n    selectorOrTarget: Element | string,\n    event: string,\n    payload: any,\n    callback: (reply: any, ref: number) => void\n  ) => void;\n\n  /**\n   * Method to handle an event pushed from the server.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  handleEvent: (event: string, callback: (payload: any) => void) => void;\n\n  /**\n   * Method to inject a list of file-like objects into an uploader.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  upload: (name: string, files: any) => void;\n\n  /**\n   * Method to inject a list of file-like objects into an uploader. The hook will send\n   * the files to the uploader with `name` defined by\n   * [`allow_upload/3`](https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#allow_upload/3)\n   * on the server-side. Dispatching new uploads triggers an input change event which will be sent\n   * to the LiveComponent or LiveView the selectorOrTarget is defined in, where its value can be\n   * either a query selector or an actual DOM element. If the query selector returns more than one\n   * live file input, an error will be logged.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  uploadTo: (\n    selectorOrTarget: Element | string,\n    name: string,\n    files: any\n  ) => void;\n\n  /**\n   * The element has been added to the DOM and its server LiveView has finished mounting.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  mounted(): void {}\n\n  /**\n   * The element is about to be updated in the DOM. Note: any call here must be synchronous as the operation\n   * cannot be deferred or cancelled.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  beforeUpdate(): void {}\n\n  /**\n   * The element has been updated in the DOM by the server.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  updated(): void {}\n\n  /**\n   * The element has been removed from the page, either by a parent update, or by the parent being removed\n   * entirely.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  destroyed(): void {}\n\n  /**\n   * The element's parent LiveView has disconnected from the server.\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  disconnected(): void {}\n\n  /**\n   * The element's parent LiveView has reconnected to the server\n   * [More information](https://hexdocs.pm/phoenix_live_view/0.18.0/js-interop.html#client-hooks-via-phx-hook)\n   */\n  reconnected(): void {}\n}\n\nexport function makeHook(hookClass: typeof Hook): any {\n  const methodNames = Object.getOwnPropertyNames(hookClass.prototype).filter(\n    (name) => name !== \"constructor\"\n  );\n\n  const methods = methodNames.map((name) => [name, hookClass.prototype[name]]);\n\n  return Object.fromEntries(methods);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,IAAe,OAAf,MAAoB;AAAA,EAsEzB,UAAgB;AAAA,EAAC;AAAA,EAOjB,eAAqB;AAAA,EAAC;AAAA,EAMtB,UAAgB;AAAA,EAAC;AAAA,EAOjB,YAAkB;AAAA,EAAC;AAAA,EAMnB,eAAqB;AAAA,EAAC;AAAA,EAMtB,cAAoB;AAAA,EAAC;AACvB;AAEO,SAAS,SAAS,WAA6B;AACpD,QAAM,cAAc,OAAO,oBAAoB,UAAU,SAAS,EAAE;AAAA,IAClE,CAAC,SAAS,SAAS;AAAA,EACrB;AAEA,QAAM,UAAU,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,UAAU,UAAU,KAAK,CAAC;AAE3E,SAAO,OAAO,YAAY,OAAO;AACnC;",
  "names": []
}
